From b1c1b52a2a1f3aaede86c697adbcd67eaab50f32 Mon Sep 17 00:00:00 2001
From: Etienne Carriere <etienne.carriere@foss.st.com>
Date: Thu, 12 Dec 2024 17:18:43 +0100
Subject: [PATCH] ta: pkcs11: fix CKM_RSA_X_509 signature size verification

When using raw RSA decryption to generate a raw RSA signature,
the decrypted message (that is our generated signature) may be
shorter than required since RSA may have stripped out leading zero
bytes. Fix the PKCS#11 TA implementation to insert them back to reach
the target signature size.

Fixes: e02f17f374b6 ("ta: pkcs11: add CKM_RSA_X_509 authentication")
Signed-off-by: Etienne Carriere <etienne.carriere@foss.st.com>
Acked-by: Rouven Czerwinski <r.czerwinski@pengutronix.de>
---
 ta/pkcs11/src/processing_asymm.c | 16 +++++++++-------
 1 file changed, 9 insertions(+), 7 deletions(-)

diff --git a/ta/pkcs11/src/processing_asymm.c b/ta/pkcs11/src/processing_asymm.c
index 2f59922b08f..4faaee310c0 100644
--- a/ta/pkcs11/src/processing_asymm.c
+++ b/ta/pkcs11/src/processing_asymm.c
@@ -899,14 +899,16 @@ enum pkcs11_rc step_asymm_operation(struct pkcs11_session *session,
 						    tee_attrs, tee_attrs_count,
 						    in_buf, in_size,
 						    temp_buf, &temp_size);
-			if (!res && temp_size != sz) {
-				EMSG("CMK_RSA_X509: signature size %zu != %zu",
-				     temp_size, sz);
-				rc = PKCS11_CKR_DATA_INVALID;
-				break;
-			}
 			if (!res) {
-				TEE_MemMove(out_buf, temp_buf, sz);
+				/*
+				 * Raw RSA decryption may remove some
+				 * leading nul bytes as done by rsadorep()
+				 * (lib/libtomcrypt/rsa.c). Restore them to
+				 * reach target signature size.
+				 */
+				TEE_MemFill(out_buf, 0, sz - temp_size);
+				TEE_MemMove((uint8_t *)out_buf + sz - temp_size,
+					    temp_buf, temp_size);
 				TEE_MemFill(temp_buf, 0xa5, sz);
 			}
 			output_data = true;
